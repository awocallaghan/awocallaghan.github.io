{"version":3,"sources":["projects.js"],"names":["PROJECTS_SELECTOR","PROJECT_SELECTOR","PROJECT_FILTERS_SELECTOR","PROJECT_FILTERS_HTML","PROJECT_FILTERS_NUM_TYPES","PROJECTS_COUNT_SELECTOR","PROJECTS_DATA","PROJECT_DATA","DEBUG","$","element","get","data","projects","slice","length","console","log","initFilters","initProjects","initProjectCount","fail","err","error","responseText","projectsElement","title","find","html","append","after","on","filtersUpdated","each","index","thisProjectElement","event","preventDefault","filters","serializeArray","reduce","obj","item","value","hasOwnProperty","name","constructor","Array","push","type","filterKeys","Object","keys","filter","key","projectElements","hide","projectCount","projectElement","projectData","Error","showProject","search","toLowerCase","description","indexOf","i","filterName","filterValue","show","j","k","updateProjectCount","resetFilters","reset","count","text"],"mappings":"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","file":"projects.dist.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * Filter through project data\r\n * @author Alex O'Callaghan\r\n */\r\n\r\nconst PROJECTS_SELECTOR = '#projects';\r\nconst PROJECT_SELECTOR = '.post-preview';\r\nconst PROJECT_FILTERS_SELECTOR = '#projects-filters';\r\nconst PROJECT_FILTERS_HTML = '/html/project-filters.html';\r\nconst PROJECT_FILTERS_NUM_TYPES = 3; // number of project types\r\nconst PROJECTS_COUNT_SELECTOR = '#projects-count';\r\nconst PROJECTS_DATA = 'projects';\r\nconst PROJECT_DATA = 'project';\r\n// Debug to console\r\nconst DEBUG = false;\r\n\r\n/**\r\n * Load data and initialise when page ready\r\n */\r\n$(function () {\r\n  let element = $(PROJECTS_SELECTOR);\r\n\r\n  $.get('/api/projects.json', function (data) {\r\n    // Last project in array is an empty {}\r\n    data.projects = data.projects.slice(0, data.projects.length - 1);\r\n    if (DEBUG) {\r\n      console.log('Successfully loaded projects data', data);\r\n    }\r\n    element.data(PROJECTS_DATA, data);\r\n    initFilters(element, data.projects);\r\n    initProjects(element, data.projects);\r\n    initProjectCount(element, data.projects);\r\n  }).fail(function (err) {\r\n    console.error('Error loading project data', err);\r\n    console.log(err.responseText);\r\n  });\r\n});\r\n\r\n// Setup the filter controls\r\nfunction initFilters (projectsElement, projects) {\r\n  let title = projectsElement.find('h2');\r\n  $.get(PROJECT_FILTERS_HTML, function (html) {\r\n    // Add filter trigger link\r\n    title.append('<a class=\"filter-toggler collapsed\" data-toggle=\"collapse\" href=\"#projects-filters\"><i class=\"fa fa-filter\" aria-hidden=\"true\"></i>Filter</a>');\r\n    // Add filter toggleable content\r\n    title.after(html);\r\n    // Add handling on filter change\r\n    $('#projects-filters form').on('submit', filtersUpdated);\r\n  }).fail(function (err) {\r\n    console.error('Unable to get project filters template', err);\r\n  });\r\n}\r\n\r\n// Tag each project element with its index\r\nfunction initProjects (projectsElement, projects) {\r\n  projectsElement.find(PROJECT_SELECTOR).each(function (index) {\r\n    let thisProjectElement = $(this);\r\n    thisProjectElement.data(PROJECT_DATA, projects[index]);\r\n  });\r\n}\r\n\r\n// Filters have updated\r\n// - Filters have been changed, update the shown projects\r\nfunction filtersUpdated (event) {\r\n  // Stop form submission refresh\r\n  if (event) event.preventDefault();\r\n\r\n  // Get the filters as an object\r\n  let filters = $(this).serializeArray().reduce(function(obj, item) {\r\n    // Don't save empty values\r\n    if (item.value && item.value.length > 0) {\r\n      // Property with multiple values = array\r\n      if (!obj.hasOwnProperty(item.name)) {\r\n        // Simply store value if doesn't exist\r\n        obj[item.name] = item.value;\r\n      } else if (obj[item.name].constructor === Array) {\r\n        // Add value to array if there's an existing array\r\n        obj[item.name].push(item.value);\r\n      } else {\r\n        // Create an array if existing single value\r\n        obj[item.name] = [ obj[item.name], item.value ];\r\n      }\r\n    }\r\n    return obj;\r\n  }, {});\r\n\r\n  // Check if all types are enabled, if so don't bother filtering by type\r\n  if (filters.hasOwnProperty('type') && filters.type.length === PROJECT_FILTERS_NUM_TYPES) {\r\n    delete filters.type;\r\n  }\r\n\r\n  // Create array of filter keys minus 'search' filter\r\n  let filterKeys = Object.keys(filters).filter(function (key) {\r\n    return key !== 'search';\r\n  });\r\n\r\n  let projectElements = $(PROJECTS_SELECTOR + ' ' + PROJECT_SELECTOR);\r\n\r\n  // Hide all the projects\r\n  projectElements.hide();\r\n\r\n  // Count how many projects we show\r\n  let projectCount = 0;\r\n\r\n  // Show project if it matches the filters\r\n  projectElements.each(function (index) {\r\n    let projectElement = $(this);\r\n    let projectData = projectElement.data(PROJECT_DATA);\r\n\r\n    if (!projectData) throw new Error(`No project data for index ${index}`);\r\n\r\n    let showProject = true;\r\n\r\n    // Handle 'search' string filter\r\n    // - Search for the string in 'name' and 'description'\r\n    if (filters.hasOwnProperty('search')) {\r\n      filters.search = filters.search.toLowerCase();\r\n      let name = projectData.name.toLowerCase(),\r\n          description = projectData.description.toLowerCase();\r\n      showProject = name.indexOf(filters.search) >= 0 ||\r\n                    description.indexOf(filters.search) >= 0;\r\n    }\r\n\r\n    // Check each filter\r\n    let i = 0;\r\n    while (showProject && i < filterKeys.length) {\r\n      let filterName = filterKeys[i];\r\n      let filterValue = filters[filterName];\r\n      if (filterValue.constructor === Array) {\r\n        if (projectData[filterName].constructor === Array) {\r\n          // Array filter value, array project value\r\n          // - Search both arrays as OR tests\r\n          let show = false,\r\n              j = 0,\r\n              k = 0;\r\n          while (!show && k < projectData[filterName].length) {\r\n            let j = 0;\r\n            while (!show && j < filterValue.length) {\r\n              show = projectData[filterName][k] === filterValue[j];\r\n              j++;\r\n            }\r\n            k++;\r\n          }\r\n          showProject = show;\r\n        } else {\r\n          // Array filter value, single project value\r\n          // - Treat array of filters as OR test\r\n          let show = false,\r\n              j = 0;\r\n          while (!show && j < filterValue.length) {\r\n            show = projectData[filterName] === filterValue[j];\r\n            j++;\r\n          }\r\n          showProject = show;\r\n        }\r\n      } else {\r\n        if (projectData[filterName].constructor === Array) {\r\n          // Single filter value, array project value\r\n          let show = false,\r\n            j = 0;\r\n          while (!show && j < projectData[filterName].length) {\r\n            show = projectData[filterName][j] === filterValue;\r\n            j++;\r\n          }\r\n          showProject = show;\r\n        } else {\r\n          // Single filter value, single project value\r\n          // - Simple equality check\r\n          showProject = projectData[filterName] === filterValue;\r\n        }\r\n      }\r\n      if (DEBUG && !showProject) {\r\n        console.log(projectData[filterName], 'does not match filter:', filterValue);\r\n      } else if (DEBUG) {\r\n        console.log(projectData[filterName], 'matches filter:', filterValue);\r\n      }\r\n      i++;\r\n    }\r\n\r\n    // Show the project\r\n    if (showProject) {\r\n      projectElement.show();\r\n      projectCount += 1;\r\n    }\r\n\r\n    // Update shown projects count\r\n    if (index === projectElements.length - 1) {\r\n      updateProjectCount(projectCount);\r\n    }\r\n  });\r\n}\r\n\r\n// Reset filters form + projects shown\r\nfunction resetFilters () {\r\n  $(PROJECT_FILTERS_SELECTOR + ' form')[0].reset();\r\n  filtersUpdated();\r\n}\r\n\r\n// Init project count text\r\nfunction initProjectCount (element, projects) {\r\n  element.find(PROJECT_FILTERS_SELECTOR).after('<span id=\"projects-count\"></span>');\r\n  updateProjectCount(projects.length);\r\n}\r\n\r\n// Update project count text\r\nfunction updateProjectCount (count) {\r\n  $(PROJECTS_COUNT_SELECTOR).text(`Showing ${count} project${count !== 1 ? 's' : ''}:`);\r\n}\r\n"]}